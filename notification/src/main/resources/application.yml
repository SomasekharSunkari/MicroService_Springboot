spring:
  application:
    name: notification-service

  kafka:
    
    consumer:
      bootstrap-servers: b-3.priductapicluster.jbxukd.c4.kafka.eu-north-1.amazonaws.com:9092,b-1.priductapicluster.jbxukd.c4.kafka.eu-north-1.amazonaws.com:9092,b-2.priductapicluster.jbxukd.c4.kafka.eu-north-1.amazonaws.com:9092
      group-id: paymentGroup,orderGroup
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "*"
        spring.json.type.mapping: orderConfirmation:com.sekhar.ecommerce.kafka.order.OrderConfirmation,paymentConfirmation:com.sekhar.ecommerce.kafka.payment.PaymentConfirmation

  mail:
    host: smtp.gmail.com
    port: 587
    username: sunkarisekhar36@gmail.com
    password: pyabpgelinykqcea
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enabled: true
          connectiontimeout: 5000
          timeout: 3000
          writetimeout: 5000
management:
  endpoints:
    web:
      exposure:
        include: health,info   # expose only health & info (or use "*" for all)
  endpoint:
    health:
      show-details: always     # show DB, disk, etc. details
server:
  port: 8040
